题目1、开发一款带图形界面的动物世界小游戏

目的：模拟一个动物家庭。

通过设计和编写该程序，锻炼结构化程序设计和面向对象的基本编程技能，提高程序组织的合理性、可读性和可维护性。

要求：设计一个爱心家庭；功能包括有若干动物家庭成员，模拟成员日常的吃、玩、病、以及购物、工作、做家务等功能。建议采用良好的控制台人机交互界面。
要求有商店、商店中有多种类商品，工作也有多个种类。
问题描述：
（1）   初始时具有基本的生命特征和生存条件；
（2）   当吃东西后，体重增加，体力增加；
（3）   当锻炼后，体重下降，体力下降，要求恢复体力；
（4）   干活后，体力下降，爱心增加，能力增加；
（5）   打工后，体力下降，爱心增加，经验和金钱上升；
（6）   没有食品，且体力不足（体力=0），就处于饥饿状态，报警；
（7）   买食品，需要付出金钱；
（8）   每30s体力下降1；
（9）   空闲且体能容许时，需帮助其他家庭成员（对应成员体力+2）；
（10）  帮助其他成员，爱心增加；
（11）  爱心达到一定数量，奖励（兑换金币）；
（12）  所有成员同时报警或者任意成员报警60s，游戏结束；
（13）  经验到一定数值（达到50），升级（一共6级），经验清空，体力上限+5，金钱+100。(满级后提示)

类

【角色类】
数据：
体重、体力（初值=10，初始上限=10，最终上限=60）、爱心、经验、金钱、状态（友元类）；
函数：

帮助、吃、锻炼、干活、打工、购物
[rabbit]：体重10、体力10、爱心0、经验0、金钱100；
[dog]：体重12、体力10、爱心0、经验0、金钱100；
[cat]：体重10、体力10、爱心0、经验0、金钱150；

【商店类】
数据：
商品类对象[食物1、2、3]
函数：
进货（auto）、卖出（对应商品数量减少）；


【商品类】：角色，动作
数据：
数量、售价
函数：
使用
[面包]：商店初始共10个；每60s进货2个；售价50金币；体重增加1；体力增加1；
[午餐肉]：商店初始共5个；每90s进货2个；售价100金币；体重增加1；体力增加3；
[汉堡包]：商店初始共5个；每120s进货2个；售价200金币；体重增加1；体力增加5；


【锻炼类】：角色，动作
[跑步]：每次运动需210s；体重下降3；体力下降5，经验上升20；
[其他]：每次运动需150s；体重下降2；体力下降4，经验上升15；

【工作类】：角色，动作
[搬砖]：每次工作需300s；体力下降3；爱心增加5；经验上升20；金钱增加150；
[坐班]：每次工作需240s；体力下降2；爱心增加5；经验上升40；金钱增加250；

【干活类】：角色，动作
[打扫卫生]：每次干活需210s；体力下降2；爱心增加5；
[炒菜]：每次干活需210s；体力下降2；爱心增加5；
[洗碗]：每次干活需150s；体力下降1；爱心增加3；

【状态类】
[饥饿状态]：当体力=0时，自动触发报警（当所有成员同时报警或者任意成员报警60s，游戏结束）；
[肥胖状态]：当体重达到20及以上时，体力下降更快（每15s下降2）；
[疲惫状态]：当体力达到5及以下时，无法进行锻炼、打工、干活类活动；

【场景】
{
    【通用操作】：切换至map、使用道具
    【map类】：场景切换
    1.【mainroom类（大厅）】：housework操作
    2.【park类（公园）】：跑步操作
    3.【shop类（商店）】：购买操作
    4.【zuoban类（坐班）】：坐班
    5.【banzhuan类（搬砖）】：搬砖
    6.【gym类（健身房）】：others操作
}

界面基本操作：
当鼠标覆盖人物头像上方时，显示状态信息（QProgressBar），鼠标划走后隐藏信息
单击人物头像，可以显示操作菜单
